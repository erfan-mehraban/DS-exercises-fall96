import java.util.Scanner;
import static java.lang.Integer.max;
import java.util.NoSuchElementException;


 class Queue {
    int [] a;
    int j=0;
    int n=0;
    public Queue(int x){
        a=new int[x];
    }
    public void addFirst(int x){
        if (n + 1 > a.length) resize();
        a[((j-1)+a.length) % a.length] = x;
        j=((j-1)+a.length)%a.length;
        n++;
    }
    public void addLast(int x){
        if (n + 1 > a.length) resize();
        a[(j+n) % a.length] = x;
        n++;
    }
    public int removeFirst(){
            int x = a[j];
            j = (j + 1) % a.length;
            n--;
            if (a.length >= 3*n) resize();
            return x;
    }
    public int removeLast(){
            int x = a[(j+n-1)%a.length];
            n--;
            if (a.length >= 3*n) resize();
            return x;
    }
    public void resize(){
        int[] b = new int [max(1,n*2)];
        for (int k = 0; k < n; k++)
        b[k] = a[(j+k) % a.length];
        a = b;
        j = 0;
        b=null;
    }
    public void print(){
        if(j+n-1>=a.length){
            for(int i=j;i<a.length;i++)
                    System.out.println(a[i]);
                for(int i=0;i<=(j+n-1)%a.length;i++)
                    System.out.println(a[i]);
        }
        else
            for(int i=j;i<=j+n-1;i++)
                System.out.println(a[i]);
    }
}
public class AA {
        public static void balance(Queue q1,Queue q2){
            int n1=q1.n; int n2=q2.n;
            int c= q1.n+q2.n;
                if(n1>c/2)
                    while(n1>c/2){
                         int x=q1.removeLast();
                         q2.addFirst(x);
                         n1=q1.n;
                    }
                else
                    while(n1<c/2){
                        int x=q2.removeFirst();
                        q1.addLast(x);
                        n1=q1.n;
                    }
        }
        public static void main(String[] args) {
            Scanner scan = new Scanner(System.in);
            Queue q1=new Queue(4);
            Queue q2=new Queue(4);
            Queue removeList=new Queue(4);
            while(scan.hasNextInt()){
                q1.addLast(scan.nextInt());
            } 
            balance(q1,q2);
            
            
            
            while (scan.hasNext()){
                String s1=scan.next();
                if(s1.equals("add"))
                {
                    String s2=scan.next();
                    if(s2.equals("h"))
                    {
                         int x=scan.nextInt();
                         q1.addFirst(x);
                    }
                    if(s2.equals("m"))
                    {
                         balance(q1,q2);
                         int x=scan.nextInt();
                         q1.addLast(x);
                         
                    }
                    if(s2.equals("t"))
                    {
                         int x=scan.nextInt();
                         q2.addLast(x);
                         
                    }
                }
                else if(s1.equals("remove"))
                {
                    String s2=scan.next();
                    if(s2.equals("h"))
                    {
                        if(q1.n!=0)
                            removeList.addLast(q1.removeFirst());
                        else if (q1.n==0)
                            removeList.addLast(q2.removeFirst());
                         
                    }
                    if(s2.equals("m"))
                    {
                        balance(q1,q2);
                        if(q1.n==0)
                            removeList.addLast(q2.removeFirst());
                        if((q1.n+q2.n)%2==0&& q1.n!=0)
                            removeList.addLast(q1.removeLast());
                        else if ((q1.n+q2.n)%2!=0&& q1.n!=0)
                            removeList.addLast(q2.removeFirst());
                         
                    }
                    if(s2.equals("t"))
                    {
                        if (q2.n!=0)
                         removeList.addLast(q2.removeLast());
                         else if (q2.n==0)
                            removeList.addLast(q1.removeLast());
                    }
                }
                else if(s1.equals("end"))
                {
                    break;
                }
            }
            
            for(int i=0;i<removeList.n;i++)
                System.out.println(removeList.a[(i+removeList.j)%removeList.a.length]);
        }
        
}

